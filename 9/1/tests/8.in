thecourtofking xeon plagued with intrigue and conspiracy a document 
recently discovered by the king's secret service is thought 
to be part of some mischievous scheme the document contains simply 
a set of sentences which state the truth or falsehood of each other 
sentences have the form sentence x is truefalse where x identifies one 
sentence in the set the kings secret service suspects the sentences in 
fact refer to another yet uncovered document while they try to establish 
the origin and purpose of the document the king ordered you to find whether 
the set of sentences it contains is consistent that is if there is a
valid truth assignment for the sentences if the set is consistent the
thing wants you to determine the maximum number of sentences which can be 
made true in a valid truth assignment for the document
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int b2decint(char *s, int b)
{
	int i=0, n=0,k; 
	for (i = 0; s[i]; i++) 
	{
		if ((s[i]<='9')&& (s[i]>='0'))
			k = s[i] - '0';
		else
			k = s[i] + 10 - 'a';
		n = n*b + k;
	}
	
	 return n;

}

void dec2bint(char *s, int n, int b)
{
	int i=0, k;
	char a;
	do 
	{
		s[i] = n%b;
		i++;
		n/=b;
	}
	while (n!=0);
	k = i;
	s[k] = 0;
	for (i=0; i<k; i++)
		if (s[i]<10)
			s[i] += '0';
		else
			s[i] = s[i] - 10 + 'a';
	for (i=0; i < k/2; i++)
	{
		a = s[i];
		s[i] = s[k - i - 1];
		s[k - i - 1] = a;
	}

}
void dec2breal(char *s, float n, int b, int r, float eps)
{
	int i=0, k;
	char a;
	do 
	{
		s[i] = (int)(n*b);
		n = n*b - s[i];
		if((1-n) < eps)
		{
			s[i]++;
			n = 0;
			while(s[i]==b)
			{
				s[i]=0;
				i--;
				s[i]++;
			}
		}
		i++;
	
	}
	while ((n>=eps)&&(i < r));
	k = i;
	s[k] = 0;
	for (i=0; i<k; i++)
		if (s[i]<10)
			s[i] += '0';
		else
			s[i] = s[i] - 10 + 'a';
}

float b2decreal(char *s, int b)
{
	int i, k,r; 
	float n = 0.0;
	r = strlen(s);
	for (i = r-1; i>= 0; i--) 
	{
		if ((s[i]<='9')&& (s[i]>='0'))
			k = s[i] - '0';
		else
			k = s[i] + 10 - 'a';
		n = (n + k)/b;
	}
	
	 return n;

}
int main()
{
	int  b1,b2, r, i, p=0, d, l, k;
	float n;
	char rec[100], s[100];

	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);

	scanf("%d%d%d", &b1,&b2, &r);
	scanf("%s", rec);
	for (i=0; rec[i]; i++)
	{
		if (rec[i] =='.') 
			if (p==0)
				p = i;
			else
				break;
		else
		{
			if ((rec[i]>='0')&&(rec[i]<='9'))
				k = rec[i]-'0';
			else
				k = rec[i] -'a' +10;
			if ((k < 0) ||(k >= b1))
				break;
		}
	}
	if (rec[i])
	{
		printf("NO\n");
		return 0;
	}
	if(p)
	{
		rec[p] = 0;
		p++;
	}
	d = b2decint(rec, b1);
	dec2bint(s, d, b2);
	if (p)
	{
		l = strlen(s);
		s[l] = '.';
		n = b2decreal(rec+p, b1);
		dec2breal(s+l+1, n, b2, r, 0.00001);
	}
	printf("%s\n", s);
	return 0;
}
